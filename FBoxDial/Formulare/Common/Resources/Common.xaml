<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:fbd="clr-namespace:FBoxDial" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Icons.xaml"/>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ITB" TargetType="{x:Type Button}"  >
        <Setter Property="Margin" Value="8" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

    </Style>
    
    <Style x:Key="MiniIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0,4,4,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="DataGridIconButton" TargetType="{x:Type Button}" >
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style x:Key="OptComboBox" TargetType="{x:Type ComboBox}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                                   Grid.Column="0"/>

                        <ComboBox   
                            ItemsSource="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            SelectedValue="{Binding Path=SelectedValue, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            DisplayMemberPath="{Binding Path=DisplayMemberPath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            SelectedValuePath="{Binding Path=SelectedValuePath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            IsEditable="{Binding Path=IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            Grid.Column="1"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OptHintTextBlock" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="0,0,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="0.5" 
                            BorderBrush="{DynamicResource ControlDefaultBorderBrush}"
                            Background="{DynamicResource ControlDisabledBackground}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="60">
                            <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Label}}}"
                                       TextWrapping="WrapWithOverflow" 
                                       FontSize="10"/>
                        </ScrollViewer>
                        
                        <b:Interaction.Behaviors>
                            <fbd:PassthroughMouseWheelBehavior />
                        </b:Interaction.Behaviors>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OptTextBox" TargetType="{x:Type TextBox}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"
                                          Grid.Column="0"/>

                        <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"
                                 Grid.Column="1" Margin="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type RadioButton}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="GroupName" Value="SelOpt"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness ="0" Padding="8,0,0,0" Margin="0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>           
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ControlPrimaryDefaultBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ControlPrimaryDefaultBorderBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ControlMouseOverBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ControlPrimarySelectedMouseOverBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>