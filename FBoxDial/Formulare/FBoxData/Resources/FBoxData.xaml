<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fbd="clr-namespace:FBoxDial" >

    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Common/Resources/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTAMViewModel}">
        <fbd:FboxTAMView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTellowsViewModel}">
        <fbd:FboxTellowsView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTelBuchViewModel}">
        <fbd:FBoxTelbuchView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataRufUmlViewModel}">
        <fbd:FBoxDeflectionView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataCallListViewModel}">
        <fbd:FboxCallListView/>
    </DataTemplate>

    <!--https://stackoverflow.com/a/56616523-->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Lavender"/>
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Thumb"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="8"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Thumb"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid MinWidth="{TemplateBinding MinWidth}">
                        <Border Margin="1,0,1,0" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" Height="16" BorderBrush="{StaticResource Button.Static.Border}"
                                Background="Transparent" x:Name="RangeBorder" />

                        <Ellipse x:Name="Thumb" Width="16" Height="16" Fill="{TemplateBinding Background}" StrokeThickness="1" HorizontalAlignment="Left">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--You can modify your own style changes here-->

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Green"/>
                            <Setter TargetName="RangeBorder" Property="BorderBrush" Value="DarkGray"/>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Thumb" Property="Stroke" Value="LightGray"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageHead" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Margin" Value="2,4"/>
    </Style>

    <Style x:Key="MessageData" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="DataGridCellCenter" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
    </Style>

    <Style x:Key="DataGridCellRight" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
    </Style>

    <Style x:Key="DataGridCellLeft" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
    </Style>

    <ControlTemplate x:Key="TimePickerButtonTemplate" TargetType="ButtonBase">
        <Border x:Name="ContentContainer" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="1"             
                SnapsToDevicePixels="True">
            <ContentPresenter x:Name="Content"
                              RecognizesAccessKey="True" 
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Margin="{TemplateBinding Padding}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="LightBlue">
                </Setter>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="LightBlue">
                </Setter>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type fbd:TimePicker}" TargetType="{x:Type fbd:TimePicker}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fbd:TimePicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal"
                                        DataContext="{TemplateBinding fbd:TimePicker.SelectedTime}">

                                <TextBox x:Name="PART_HourTextBox"
                                         Text="{Binding Hours, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                                <TextBlock Text=":" VerticalAlignment="Center"/>

                                <TextBox x:Name="PART_MinuteTextBox"
                                         Text="{Binding Minutes, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                                <TextBlock Text=":" VerticalAlignment="Center"/>

                                <TextBox x:Name="PART_SecondTextBox"
                                         Text="{Binding Seconds, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                            </StackPanel>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_IncrementButton"
                                        Margin="1,1,6,0"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock Text="p"                                                    
                                               FontFamily="Wingdings 3"
                                               FontSize="6"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                </Button>

                                <Button x:Name="PART_DecrementButton"
                                        Grid.Row="1"
                                        Margin="1,1,6,1"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock Text="q"                                                    
                                                   FontFamily="Wingdings 3"
                                                   FontSize="6"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
