<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fbd="clr-namespace:FBoxDial" 
                    xmlns:fdg="http://filterdatagrid.control.com/2021" >

    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Common/Resources/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTAMViewModel}">
        <fbd:FboxTAMView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTellowsViewModel}">
        <fbd:FboxTellowsView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataTelBuchViewModel}">
        <fbd:FBoxTelbuchView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataRufUmlViewModel}">
        <fbd:FBoxDeflectionView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:FBoxDataCallListViewModel}">
        <fbd:FboxCallListView/>
    </DataTemplate>

    <Style x:Key="MessageHead" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Margin" Value="2,4"/>
    </Style>

    <Style x:Key="MessageData" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="2,4" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <ControlTemplate x:Key="TimePickerButtonTemplate" TargetType="ButtonBase">
        <Border x:Name="ContentContainer" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="1"             
                SnapsToDevicePixels="True">
            <ContentPresenter x:Name="Content"
                              RecognizesAccessKey="True" 
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Margin="{TemplateBinding Padding}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="{DynamicResource ControlMouseOverBorderBrush}"/>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="{DynamicResource ControlPrimaryMouseOverBackground}"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlDisabledForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type fbd:TimePicker}" TargetType="{x:Type fbd:TimePicker}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDefaultBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fbd:TimePicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal"
                                        DataContext="{TemplateBinding fbd:TimePicker.SelectedTime}">

                                <TextBox x:Name="PART_HourTextBox"
                                         Text="{Binding Hours, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                                <TextBlock Text=":" VerticalAlignment="Center"/>

                                <TextBox x:Name="PART_MinuteTextBox"
                                         Text="{Binding Minutes, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                                <TextBlock Text=":" VerticalAlignment="Center"/>

                                <TextBox x:Name="PART_SecondTextBox"
                                         Text="{Binding Seconds, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                            </StackPanel>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_IncrementButton"
                                        Margin="1,1,6,0"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock Text="p"                                                    
                                               FontFamily="Wingdings 3"
                                               FontSize="6"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                </Button>

                                <Button x:Name="PART_DecrementButton"
                                        Grid.Row="1"
                                        Margin="1,1,6,1"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock Text="q"                                                    
                                                   FontFamily="Wingdings 3"
                                                   FontSize="6"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterDatagridStyle"
           TargetType="{x:Type fdg:FilterDataGrid}"
           >
        <!--Farben müssen überschrieben werden, da ansonsten das FilterDataGrid diese wieder überschreibt.
            Alternativ würde der Button für das Löschen aller gefilterter Spalten nicht dargestellt.-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDefaultBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlDefaultBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlDefaultBorderBrush}" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="SelectionUnit" Value="FullRow" />
    </Style>

</ResourceDictionary>
