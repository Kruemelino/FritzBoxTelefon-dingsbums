<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fbd="clr-namespace:FBoxDial">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Common/Resources/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--<fbd:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <fbd:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>-->


    <DataTemplate DataType="{x:Type fbd:OptBaseViewModel}">
        <fbd:OptBaseView />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type fbd:OptAnrMonViewModel}">
        <fbd:OptAnrMonView />
    </DataTemplate>    
    
    <DataTemplate DataType="{x:Type fbd:OptDialerViewModel}">
        <fbd:OptDialerView />
    </DataTemplate>  
    
    <DataTemplate DataType="{x:Type fbd:OptJournalViewModel}">
        <fbd:OptJournalView />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type fbd:OptSearchContactViewModel}">
        <fbd:OptSearchContactView />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type fbd:OptCreateContactViewModel}">
        <fbd:OptCreateContactView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:OptTelephonyViewModel}">
        <fbd:OptTelephonyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:OptPhonerViewModel}">
        <fbd:OptPhonerView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:OptMicroSIPViewModel}">
        <fbd:OptMicroSIPView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:OptInfoViewModel}">
        <fbd:OptInfoView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:OptTestViewModel}">
        <fbd:OptTestView />
    </DataTemplate>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type RadioButton}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="GroupName" Value="SelOpt"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness ="0" Padding="8,0,0,0" Margin="0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="OptTextBox" TargetType="{x:Type TextBox}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"
                                        Grid.Column="0"/>

                        <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}"
                                 Grid.Column="1" Margin="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptHeader" TargetType="{x:Type TextBlock}" >
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="0,2,0,4"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    
    

    <Style x:Key="OptComboBox" TargetType="{x:Type ComboBox}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                                   Grid.Column="0"/>

                        <ComboBox   
                            ItemsSource="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            SelectedValue="{Binding Path=SelectedValue, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            DisplayMemberPath="{Binding Path=DisplayMemberPath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            SelectedValuePath="{Binding Path=SelectedValuePath, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                            Grid.Column="1"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptCheckBox" TargetType="{x:Type CheckBox}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="0,0,0,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="151.5"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Column="0"/>

                        <BulletDecorator Background="Transparent" 
                                         SnapsToDevicePixels="True"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Grid.Column="1" >

                            <BulletDecorator.Bullet>
                                <CheckBox IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <CheckBox IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" IsHitTestVisible="False" Content="{TemplateBinding Content}"/>
                        <CheckBox IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Content="{TemplateBinding Content}" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}" >
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MaxHeight" Value="180"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="HeadersVisibility" Value="None"/>
    </Style>

    <Style x:Key="ConsoleTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MaxHeight" Value="75"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>        
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer RenderTransformOrigin="0.5,0.5" VerticalScrollBarVisibility="Auto">
                        <ScrollViewer.RenderTransform>
                            <ScaleTransform ScaleY="-1"/>
                        </ScrollViewer.RenderTransform>
                        <TextBox Text="{TemplateBinding Text}" RenderTransformOrigin="0.5,0.5">
                            <TextBox.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </TextBox.RenderTransform>
                        </TextBox>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
