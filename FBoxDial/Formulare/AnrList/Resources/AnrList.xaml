<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fbd="clr-namespace:FBoxDial">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Common/Resources/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <DataTemplate DataType="{x:Type fbd:AnrListViewModel}">
        <fbd:AnrListView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fbd:TellowsViewModel}">
        <fbd:TellowsView />
    </DataTemplate>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type RadioButton}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="GroupName" Value="SelOpt"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness ="0" Padding="8,0,8,0" Margin="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}" >
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="HeadersVisibility" Value="Column"/>        
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
        <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
    </Style>

    <Style x:Key="DataGridCellCenter" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
    </Style>

    <Style x:Key="DataGridCellRight" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
    </Style>
    
    <Style x:Key="DataGridCellLeft" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
    </Style>

    <ControlTemplate x:Key="TimePickerButtonTemplate" TargetType="ButtonBase">
        <Border x:Name="ContentContainer" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="1"             
                SnapsToDevicePixels="True">
            <ContentPresenter x:Name="Content"
                              RecognizesAccessKey="True" 
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Margin="{TemplateBinding Padding}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="LightBlue">
                </Setter>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="ContentContainer"
                        Property="Background"
                        Value="LightBlue">
                </Setter>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Content" 
                        Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type fbd:TimePicker}" TargetType="{x:Type fbd:TimePicker}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fbd:TimePicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal"
                                        DataContext="{TemplateBinding fbd:TimePicker.SelectedTime}">

                                <TextBox x:Name="PART_HourTextBox"
                                         Text="{Binding Hours, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>
                                
                                <TextBlock Text=":" VerticalAlignment="Center"/>
                                
                                <TextBox x:Name="PART_MinuteTextBox"
                                         Text="{Binding Minutes, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>
                                
                                <TextBlock Text=":" VerticalAlignment="Center"/>
                                
                                <TextBox x:Name="PART_SecondTextBox"
                                         Text="{Binding Seconds, Mode=OneWay, StringFormat=00}"
                                         BorderBrush="{x:Null}"
                                         Width="20" VerticalAlignment="Center"/>

                            </StackPanel>
                            
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_IncrementButton"
                                        Margin="1,1,6,0"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock Text="p"                                                    
                                               FontFamily="Wingdings 3"
                                               FontSize="6"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                </Button>
                                
                                <Button x:Name="PART_DecrementButton"
                                        Grid.Row="1"
                                        Margin="1,1,6,1"
                                        Width="20"
                                        Template="{StaticResource TimePickerButtonTemplate}">
                                        <TextBlock Text="q"                                                    
                                                   FontFamily="Wingdings 3"
                                                   FontSize="6"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
